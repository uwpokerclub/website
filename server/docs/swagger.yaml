definitions:
  Blind:
    properties:
      ante:
        type: integer
      big:
        type: integer
      small:
        type: integer
      time:
        type: integer
    type: object
  CreateEventRequest:
    properties:
      format:
        type: string
      name:
        type: string
      notes:
        type: string
      pointsMultiplier:
        type: number
      semesterId:
        type: string
      startDate:
        type: string
      structureId:
        type: integer
    required:
    - format
    - name
    - pointsMultiplier
    - semesterId
    - startDate
    - structureId
    type: object
  CreateParticipantRequest:
    properties:
      eventId:
        type: integer
      membershipId:
        type: string
    required:
    - eventId
    - membershipId
    type: object
  CreateSemesterRequest:
    properties:
      endDate:
        example: "2023-12-31T23:59:59Z"
        type: string
      membershipDiscountFee:
        example: 5
        minimum: 0
        type: integer
      membershipFee:
        example: 10
        minimum: 0
        type: integer
      meta:
        type: string
      name:
        example: Fall 2023
        type: string
      rebuyFee:
        example: 2
        minimum: 0
        type: integer
      startDate:
        example: "2023-09-01T00:00:00Z"
        type: string
      startingBudget:
        example: 100
        minimum: 0
        type: number
    required:
    - endDate
    - membershipDiscountFee
    - membershipFee
    - name
    - rebuyFee
    - startDate
    type: object
  ErrorResponse:
    properties:
      code:
        description: Code is the HTTP status code for the error.
        type: integer
      message:
        description: Message is a more descriptive error message.
        type: string
      type:
        description: Type is the name of the HTTP status code.
        type: string
    type: object
  Event:
    properties:
      entries:
        items:
          $ref: '#/definitions/Participant'
        type: array
      format:
        type: string
      id:
        type: integer
      name:
        type: string
      notes:
        type: string
      pointsMultiplier:
        type: number
      rebuys:
        type: integer
      semester:
        $ref: '#/definitions/Semester'
      semesterId:
        type: string
      startDate:
        type: string
      state:
        type: integer
      structure:
        $ref: '#/definitions/Structure'
      structureId:
        type: integer
    type: object
  GetSessionResponse:
    properties:
      permissions:
        additionalProperties:
          additionalProperties: {}
          type: object
        type: object
      role:
        type: string
      username:
        type: string
    type: object
  ListParticipantsResult:
    properties:
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      membershipId:
        type: string
      placement:
        type: integer
      signedOutAt:
        type: string
    type: object
  NewSessionRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  Participant:
    properties:
      eventId:
        type: integer
      id:
        type: integer
      membership:
        $ref: '#/definitions/models.Membership'
      membershipId:
        type: string
      placement:
        type: integer
      signedOutAt:
        type: string
    type: object
  Semester:
    properties:
      currentBudget:
        example: 100
        type: number
      endDate:
        example: "2023-12-31T23:59:59Z"
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      membershipDiscountFee:
        example: 5
        type: integer
      membershipFee:
        example: 10
        type: integer
      meta:
        type: string
      name:
        example: Fall 2023
        type: string
      rebuyFee:
        example: 2
        type: integer
      startDate:
        example: "2023-09-01T00:00:00Z"
        type: string
      startingBudget:
        example: 100
        type: number
    type: object
  Structure:
    properties:
      blinds:
        items:
          $ref: '#/definitions/Blind'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  UpdateEventRequestV2:
    properties:
      format:
        example: No Limit Hold'em
        minLength: 1
        type: string
      name:
        example: New Event Name
        minLength: 1
        type: string
      notes:
        example: Some notes about the event
        type: string
      pointsMultiplier:
        example: 1.5
        minimum: 0
        type: number
      startDate:
        example: "2023-10-01T18:00:00Z"
        type: string
    type: object
  models.Membership:
    properties:
      discounted:
        type: boolean
      id:
        type: string
      paid:
        type: boolean
      ranking:
        $ref: '#/definitions/models.Ranking'
      semester:
        $ref: '#/definitions/Semester'
      semesterId:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userId:
        type: integer
    type: object
  models.Ranking:
    properties:
      membershipID:
        type: string
      points:
        format: int32
        type: integer
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      faculty:
        enum:
        - AHS
        - Arts
        - Engineering
        - Environment
        - Math
        - Science
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      questId:
        type: string
    required:
    - email
    - firstName
    - id
    - lastName
    type: object
info:
  contact:
    email: uwaterloopoker@gmail.com
    name: UWPSC Development Team
  description: This is the API for the UWPSC website.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: UWPSC API
  version: "1.0"
paths:
  /health:
    get:
      description: Check the health of the API service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health Check
      tags:
      - Health
  /semesters:
    get:
      description: List all semesters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Semester'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List Semesters
      tags:
      - Semesters
    post:
      consumes:
      - application/json
      description: Create a new semester
      parameters:
      - description: Semester data
        in: body
        name: semester
        required: true
        schema:
          $ref: '#/definitions/CreateSemesterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Semester'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Semester
      tags:
      - Semesters
  /semesters/{id}:
    get:
      description: Get a specific semester by ID
      parameters:
      - description: Semester ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Semester'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Semester
      tags:
      - Semesters
  /semesters/{semesterId}/events:
    get:
      consumes:
      - application/json
      description: Retrieve a list of events for a specific semester
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List Events
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: Create a new event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/CreateEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Event
      tags:
      - Events
  /semesters/{semesterId}/events/{eventId}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific event by its ID
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Event
      tags:
      - Events
    patch:
      consumes:
      - application/json
      description: Update an existing event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      - description: Event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/UpdateEventRequestV2'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update Event
      tags:
      - Events
  /semesters/{semesterId}/events/{eventId}/end:
    post:
      consumes:
      - application/json
      description: End an existing event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: End Event
      tags:
      - Events
  /semesters/{semesterId}/events/{eventId}/entries:
    get:
      consumes:
      - application/json
      description: Retrieve a list of participant entries for a specific event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ListParticipantsResult'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List Entries
      tags:
      - Entries
    post:
      consumes:
      - application/json
      description: Create a new participant entry for an event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      - description: Entry data
        in: body
        name: entry
        required: true
        schema:
          $ref: '#/definitions/CreateParticipantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Participant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Entry
      tags:
      - Entries
  /semesters/{semesterId}/events/{eventId}/entries/{entryId}:
    delete:
      consumes:
      - application/json
      description: Delete a participant entry from an event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      - description: Entry ID (Membership ID)
        in: path
        name: entryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete Entry
      tags:
      - Entries
  /semesters/{semesterId}/events/{eventId}/entries/{entryId}/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in a participant to an event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      - description: Entry ID (Membership ID)
        in: path
        name: entryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Participant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Sign In Entry
      tags:
      - Entries
  /semesters/{semesterId}/events/{eventId}/entries/{entryId}/sign-out:
    post:
      consumes:
      - application/json
      description: Sign out a participant from an event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      - description: Entry ID (Membership ID)
        in: path
        name: entryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Participant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Sign Out Entry
      tags:
      - Entries
  /semesters/{semesterId}/events/{eventId}/rebuy:
    post:
      consumes:
      - application/json
      description: Add a new rebuy entry to an event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Rebuy Event
      tags:
      - Events
  /semesters/{semesterId}/events/{eventId}/restart:
    post:
      consumes:
      - application/json
      description: Restart an existing Event
      parameters:
      - description: Semester ID
        in: path
        name: semesterId
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Restart Event
      tags:
      - Events
  /session:
    get:
      description: Retrieve current user's session information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetSessionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get current session
      tags:
      - Authentication
    post:
      consumes:
      - application/json
      description: Authenticate user and create a session
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/NewSessionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: User login
      tags:
      - Authentication
  /session/logout:
    post:
      description: Invalidate current user session
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: User logout
      tags:
      - Authentication
swagger: "2.0"
